<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-configuration PUBLIC     
          "-//Hibernate/Hibernate Configuration DTD 3.0//EN"     
          "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<!-- hibernate-configuration是连接配置文件的根元素 -->
<hibernate-configuration>
	<session-factory>
		<!-- 指定连接数据库所有的驱动 -->
		<property name="connection.driver_class">com.mysql.jdbc.Driver</property>
		<property name="connection.url">jdbc:mysql://localhost:3306/thinkBlog</property>
		<property name="connection.username">root</property>
		<property name="connection.password">quanyec</property>

		<!-- show_sql: 操作数据库时,会 向控制台打印sql语句 -->
		<property name="show_sql">true</property>
		<!-- format_sql: 打印sql语句前,会将sql语句先格式化 -->
		<property name="format_sql">true</property>
		<!-- hbm2ddl.auto: 生成表结构的策略配置 update(最常用的取值): 如果当前数据库中不存在表结构,那么自动创建表结构. 
			如果存在表结构,并且表结构与实体一致,那么不做修改 如果存在表结构,并且表结构与实体不一致,那么会修改表结构.会保留原有列. create(很少):无论是否存在表结构.每次启动Hibernate都会重新创建表结构.(数据会丢失) 
			create-drop(极少): 无论是否存在表结构.每次启动Hibernate都会重新创建表结构.每次Hibernate运行结束时,删除表结构. 
			validate(很少):不会自动创建表结构.也不会自动维护表结构.Hibernate只校验表结构. 如果表结构不一致将会抛出异常. -->
		<property name="hbm2ddl.auto">update</property>
		<!-- 数据库方言配置 org.hibernate.dialect.MySQL5Dialect (选择最短的，MYSQL5.X以上的版本必需要写上5) -->
		<property name="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</property>
		<!-- hibernate.connection.autocommit: 事务自动提交 -->
		<property name="hibernate.connection.autocommit">true</property>
		<!-- 将Session与线程绑定=> 只有配置了该配置,才能使用getCurrentSession -->
		<property name="hibernate.current_session_context_class">thread</property>

		<!-- C3P0连接池配置 - 需要导入C3P0 jar包 -->
		<!-- C3P0连接池的最大连接数 -->
		<property name="hibernate.c3p0.max_size">20</property>
		<!-- C3P0连接池的最小连接数 -->
		<property name="hibernate.c3p0.min_size">1</property>
		<!-- C3P0连接池中连接的超时时长 -->
		<property name="hibernate.c3p0.timeout">1800</property>
		<!-- C3P0缓存Statement的数量 -->
		<property name="hibernate.c3p0.max_statements">50</property>

		<!-- 罗列所有的映射文件 -->
		<mapping resource="quanyec/thinkblog/pojo/Blog.hbm.xml" />
	</session-factory>
</hibernate-configuration>